// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name TurboUpiPluginUAT
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Razorpay
import RazorpayTurboUPIUI
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc public class RazorpayTurboUPI : ObjectiveC.NSObject {
  @objc public class func pluginInstance() -> any Razorpay.UPITurboPlugin
  @objc public class func paymentPlugin() -> any Razorpay.PluginPaymentDelegate
  @objc public class func UIPluginInstance() -> any Razorpay.UPITurboUIPlugin
  @objc public class func turboUIPaymentPlugin() -> any Razorpay.PluginPaymentDelegate
  @objc public class func turboTPVUIPlugin() -> any Razorpay.UPITurboTPVUIPlugin
  @objc public class func turboTPVPlugin() -> any Razorpay.UPITurboTPVPlugin
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol UpiTurboLinkAccountDelegate {
  @objc func onResponse(_ action: TurboUpiPluginUAT.LinkUpiAction)
}
@objc public protocol UpiTurboTPVLinkAccountDelegate {
  @objc func onResponse(_ action: TurboUpiPluginUAT.TPVLinkUpiAction)
}
@objc public protocol UPITurboResultDelegate {
  @objc func onSuccessFetchingLinkedAcc(_ accList: [TurboUpiPluginUAT.UpiAccount])
  @objc func onErrorFetchingLinkedAcc(_ error: TurboUpiPluginUAT.TurboError?)
}
@objc @_inheritsConvenienceInitializers public class RazorpayTurbo : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class RazorpayTurboTPV : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@objc public class LinkUpiAction : ObjectiveC.NSObject {
  public typealias Bank = Any
  public typealias BankAccount = Any
  public typealias Card = Any
  @objc public var code: TurboUpiPluginUAT.LinkActionCode
  @objc public var data: Any?
  @objc public var error: TurboUpiPluginUAT.TurboError?
  @objc public init(action: TurboUpiPluginUAT.LinkActionCode, error: TurboUpiPluginUAT.TurboError? = nil)
  @objc public func registerDevice()
  @objc public func selectedBank(_ bank: Any)
  @objc public func selectedBankAccount(_ bankAccount: Any)
  @objc public func setUpiPin(_ bankAccount: TurboUpiPluginUAT.UpiBankAccount, _ card: TurboUpiPluginUAT.UpiCard)
  @objc deinit
}
@objc public class TPVLinkUpiAction : ObjectiveC.NSObject {
  public typealias BankAccount = Any
  public typealias Card = Any
  @objc public var code: TurboUpiPluginUAT.TPVLinkActionCode
  @objc public var data: Any?
  @objc public var error: TurboUpiPluginUAT.TurboError?
  @objc public init(action: TurboUpiPluginUAT.TPVLinkActionCode, error: TurboUpiPluginUAT.TurboError? = nil)
  @objc public func registerDevice()
  @objc public func setUpiPin(_ bankAccount: TurboUpiPluginUAT.UpiBankAccount, _ card: TurboUpiPluginUAT.UpiCard)
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class UpiAccount : ObjectiveC.NSObject {
  @objc public var accountNumber: Swift.String?
  @objc public var bankLogoUrl: Swift.String?
  @objc public var bankName: Swift.String?
  @objc public var bankPlaceholderUrl: Swift.String?
  @objc public var ifsc: Swift.String?
  @objc public var pinLength: Swift.Int
  @objc public var vpa: TurboUpiPluginUAT.Vpa?
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class Vpa : ObjectiveC.NSObject {
  @objc public var address: Swift.String?
  @objc public var bankAccount: TurboUpiPluginUAT.UpiBankAccount?
  @objc public var handle: Swift.String?
  @objc public var active: Swift.Bool
  @objc public var isDefault: Swift.Bool
  @objc public var validated: Swift.Bool
  @objc public var username: Swift.String?
  @objc deinit
}
@objc public class AllBanks : ObjectiveC.NSObject {
  @objc final public let popularBanks: Any
  @objc final public let banks: Any
  public init(popularBanks: Any, allBanks: Any)
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class UpiBank : ObjectiveC.NSObject {
  @objc final public let id: Swift.String?
  @objc final public let name: Swift.String?
  @objc final public let ifsc: Swift.String?
  @objc final public let bankPlaceholderUrl: Swift.String?
  @objc final public let logo: Swift.String?
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class UpiBankAccount : ObjectiveC.NSObject {
  @objc final public let id: Swift.String?
  @objc final public let creds: TurboUpiPluginUAT.UpiBankAccountCredentials?
  @objc final public let maskedAccountNumber: Swift.String?
  @objc final public let beneficiaryName: Swift.String?
  @objc final public let type: Swift.String?
  @objc final public let bank: TurboUpiPluginUAT.UpiBank?
  @objc final public let ifsc: Swift.String?
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class UpiBankAccountCredentials : ObjectiveC.NSObject {
  @objc final public let upipin: TurboUpiPluginUAT.UpiBankAccountPin?
  @objc final public let atmpin: TurboUpiPluginUAT.UpiBankAccountPin?
  @objc final public let sms: TurboUpiPluginUAT.UpiBankAccountPin?
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class UpiBankAccountPin : ObjectiveC.NSObject {
  @objc final public let length: Swift.Int
  @objc final public let set: Swift.Bool
  @objc deinit
}
@objc public class UpiCard : ObjectiveC.NSObject {
  @objc final public let expiryMonth: Swift.String
  @objc final public let expiryYear: Swift.String
  @objc public init(expMonth: Swift.String, expYear: Swift.String, lastSixDigits: Swift.String)
  @objc deinit
}
@objc public enum LinkActionCode : Swift.Int {
  case sendSms, selectBank, selectBankAccount, setUpiPin, linkAccountResponse, loaderData
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum TPVLinkActionCode : Swift.Int {
  case sendSms, setUpiPin, linkAccountResponse, loaderData
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public class UpiAccountBalance : ObjectiveC.NSObject {
  @objc final public let success: Swift.Bool
  @objc final public let balance: Swift.Int
  @objc final public let currency: Swift.String
  @objc final public let id: Swift.String
  @objc public init(success: Swift.Bool, balance: Swift.Int, currency: Swift.String, id: Swift.String)
  @objc deinit
}
@objc public class TPVBankAccount : ObjectiveC.NSObject {
  @objc public var ifsc: Swift.String
  @objc public var bankName: Swift.String?
  @objc public var accountNumber: Swift.String
  @objc public var bankLogo: Swift.String?
  public init(ifsc: Swift.String, bankName: Swift.String? = nil, accountNumber: Swift.String, bankLogo: Swift.String? = nil)
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class TurboError : ObjectiveC.NSObject {
  @objc public var errorCode: Swift.String
  @objc public var errorDescription: Swift.String
  @objc public var errorReason: Swift.String?
  @objc public var errorSource: Swift.String?
  @objc public var errorStep: Swift.String?
  @objc deinit
}
public typealias CallBack<T> = (_ response: T?, _ error: TurboUpiPluginUAT.TurboError?) -> Swift.Void
extension TurboUpiPluginUAT.LinkActionCode : Swift.Equatable {}
extension TurboUpiPluginUAT.LinkActionCode : Swift.Hashable {}
extension TurboUpiPluginUAT.LinkActionCode : Swift.RawRepresentable {}
extension TurboUpiPluginUAT.TPVLinkActionCode : Swift.Equatable {}
extension TurboUpiPluginUAT.TPVLinkActionCode : Swift.Hashable {}
extension TurboUpiPluginUAT.TPVLinkActionCode : Swift.RawRepresentable {}
